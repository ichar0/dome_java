import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.LinkedList;
public class sqlserver {
	private Connection conn = null;
	Statement stat = null;
	ResultSet rs = null;
	public sqlserver()
	{
		conn = ConnSQLServer();
	}
	
	public List<User> SQL_executeQuery(String SQL_Str)  //执行sql语句的select;
	{
		List<User> list_u = new LinkedList<User>();
		//String SQL_Str = "SELECT * FROM USERS";
		if(SQL_Str == null && SQL_Str.equals("")) {
			return list_u;
		}
		if(conn == null) {
			conn = ConnSQLServer();
		}
		if(conn!=null) {
			try {
				stat = conn.createStatement();
				rs = stat.executeQuery(SQL_Str);
				while(rs.next()) {
					User user = new User();
					user.setNum(rs.getInt(1));
					user.setAccounNum(rs.getString(2));
					user.setPassword(rs.getString(3));
					user.setUser_name(rs.getString(4));
					user.setQxid(rs.getString(5));
					user.setFatherID(rs.getString(6));
					user.setUnit_id(rs.getInt(7));
					list_u.add(user);
				}
				
				System.out.println("Select Successful!");
			}
			catch(SQLException e) {
				e.printStackTrace();
			}
			finally {
				if(rs!=null) {
					try {
						rs.close();
					} catch (SQLException e) {
						// TODO 自动生成的 catch 块
						e.printStackTrace();
					}
				}
				if(stat != null) {
					try {
						stat.close();
					} catch (SQLException e) {
						// TODO 自动生成的 catch 块
						e.printStackTrace();
					}
				}
				if(conn!=null) {
					try {
						conn.close();
						conn = null;
					} catch (SQLException e) {
						// TODO 自动生成的 catch 块
						e.printStackTrace();
					}
				}
			}
			
		}
		return list_u;
	}
	
	public int SQL_executeUpdate(String SQL_Str)  //返回值//-1:未执行成功报错 >=0:返回影响数据库的行数
	{
		if(SQL_Str == null && SQL_Str.equals("")) {
			return -1;
		}
		if(conn == null) {
			conn = ConnSQLServer();
		}
		if(conn != null) {
			
			try {
				stat = conn.createStatement();
				int[] autoGeneratedKeys = null ;
				int count = stat.executeUpdate(SQL_Str);  //autoGeneratedKeys:是否可以获取自动生成主键的标志。
				return 	count;	
			}
			catch(SQLException e) {
				e.printStackTrace();
				return -1;
			}
			finally {
				if(stat != null) {
					try {
						stat.close();
					} catch (SQLException e) {
						// TODO 自动生成的 catch 块
						e.printStackTrace();
					}
				}
				if(conn!=null) {
					try {
						conn.close();
						conn = null;
					} catch (SQLException e) {
						// TODO 自动生成的 catch 块
						e.printStackTrace();
					}
				}
			}
		}
		else {
			return -1;
		}
	}
	
	private Connection ConnSQLServer()  //链接数据库SQLserver
	{
		String driverName="com.microsoft.sqlserver.jdbc.SQLServerDriver";
		String dbUrl = "jdbc:sqlserver://localhost:1433;DatabaseName=Innovation";
		String userName = "sa";
		String userPwd = "sqlserver";
		try {
			Class.forName(driverName);
			Connection dbConn = DriverManager.getConnection(dbUrl,userName,userPwd);
			if(dbConn != null) {
				System.out.println("Connection Successful!");
				return dbConn;
			}
			else {
				System.out.println("Connection faile!");
				return null;
			}
		}
		catch(Exception e) {
			e.printStackTrace();
			return null;
		}
	}

}
